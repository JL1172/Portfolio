export const descriptionsProject = {
    spotify : "My general motivation in this project was to challenge myself with some new concepts. Specifically pertaining to designing and styling. I love coding, but how good is a web page without a pleasant UI/UX. Therefore, this was my step in the direction of getting better at styling. I learned a lot during it and it made me fall more in love with the power of front-end design. Overall, this was very fun to do, and I really enjoyed it.",
    gdp : "This project is a Single Page Application (SPA) that utilizes React, custom hooks, and various libraries to create a dynamic form field with data persistence, a dark/light mode toggle, and a line graph displaying the GDP history of selected countries using Recharts. The project incorporates axios for handling GET and POST requests, and it's styled using a combination of styled-components, reactstrap, and bootstrap for an enhanced user interface.",
    stock : "Welcome to the Stock Market Trading Simulator, a web application that allows you to practice trading with real-time data from Finnhub's APIs and Coingecko's API. This project provides you with a dynamic account balance, a total equity balance, and an overall net loss or net gain balance, all of which are updated in real time as you buy or sell shares. Whether you're a seasoned trader looking to refine your strategies or a beginner wanting to learn the ropes, this simulator is designed to give you a realistic stock market experience.",
    nasa : "This application allows users to explore NASA's collection of Astronomy Photos of the Day (APOD) by specifying a date. It features a minimalistic user interface to have more focus on the pictures. Additionally, for a pleasing U/X, this application comes with toggleable cards that provide additional information about the selected photo. Users can also mark their favorite photos for easy access. The application employs several technologies for data management, including Regex for state management, Thunk for middleware, and persistData for local storage data persistence. It is styled using Reactstrap, styled-components, and CSS. Icons used in the application are sourced from Google Fonts Icons. Additionally, users can add and delete their favorite photos.",
    form : "Welcome to the Form Management Project! This project is designed to demonstrate various form management techniques, including the reducing pattern, advanced state management, and local data persistence. By integrating technologies such as localStorage, custom hooks, reactstrap, styled-components, axios for making POST requests (to display user info), yup for form validation, and react-router for navigation, this project provides a comprehensive example of form handling in a React application. Additionally, I added a todo list application and its state is managed by React-Redux. Additionally, there is a settings mode in the todo list application that can manage the background color and general styling of the application. The entirety of this application is a work in progress, therefore I will be adding as I go along.",
}